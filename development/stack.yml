secrets:
  codimd_db_url:
    file: ./secrets/codimd/db_url.secret
  portainer_admin-password:
    file: ./secrets/portainer/admin-password.secret
  postgres_db:
    file: ./secrets/postgres/db.secret
  postgres_password:
    file: ./secrets/postgres/password.secret
  postgres_user:
    file: ./secrets/postgres/user.secret
  postgres-backup_db:
    file: ./secrets/postgres-backup/db.secret
services:
  1generator:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:1generator.${STACK_DOMAIN}
      - traefik.port=80
    image: dargmuesli/1generator:1.0.1
  adminer:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:adminer.${STACK_DOMAIN}
      - traefik.port=8080
      - traefik.frontend.auth.basic=${STACK_AUTH_BASIC}
    image: adminer:4
    volumes:
    - ../production/configuration/adminer/adminer.css:/var/www/html/adminer.css:ro
  codimd:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:codimd.${STACK_DOMAIN}
      - traefik.port=3000
    env_file: "../production/secrets/codimd/codimd.env"
    environment:
      # CMD_DB_URL_FILE: /run/secrets/codimd_db_url
      CMD_DOMAIN: codimd.${STACK_DOMAIN}
      CMD_PROTOCOL_USESSL: "true"
      CMD_URL_ADDPORT: "false"
    image: quay.io/codimd/server:1.4.0-alpine
    secrets:
    - codimd_db_url
  jonas-thelemann:
    image: dargmuesli/jonas-thelemann:dev
    user: 1000:82
    volumes:
    - ../../jonas-thelemann/dist/jonas-thelemann/:/var/www/jonas-thelemann/
    - ../production/secrets/jonas-thelemann/jonas-thelemann.env:/var/www/jonas-thelemann/credentials/jonas-thelemann.env:ro
  jonas-thelemann_nginx:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.port=443
      - traefik.protocol=https
      - traefik.default.frontend.priority=1
      - traefik.default.frontend.rule=Host:${STACK_DOMAIN},www.${STACK_DOMAIN}
      - traefik.auth.frontend.auth.basic=${STACK_AUTH_BASIC}
      - traefik.auth.frontend.priority=2
      - traefik.auth.frontend.rule=Host:${STACK_DOMAIN},www.${STACK_DOMAIN};PathPrefix:/tools/
    image: nginx:1-alpine
    volumes:
    - ../production/configuration/jonas-thelemann_nginx/nginx.conf:/etc/nginx/nginx.conf
    - ../../jonas-thelemann/dist/jonas-thelemann/:/var/www/jonas-thelemann/
    - ./certificates/:/etc/ssl/certificates/
  nextcloud:
    env_file: "../production/secrets/nextcloud/nextcloud.env"
    image: nextcloud:17-fpm-alpine
    volumes:
    - nextcloud_data:/var/www/html/
  nextcloud_nginx:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.calendar.frontend.rule=Host:calendar.${STACK_DOMAIN}
      - traefik.calendar.frontend.redirect.regex=.*
      - traefik.calendar.frontend.redirect.replacement=https://nextcloud.${STACK_DOMAIN}/apps/calendar/
      - traefik.contacts.frontend.rule=Host:contacts.${STACK_DOMAIN}
      - traefik.contacts.frontend.redirect.regex=.*
      - traefik.contacts.frontend.redirect.replacement=https://nextcloud.${STACK_DOMAIN}/apps/contacts/
      - traefik.default.frontend.rule=Host:nextcloud.${STACK_DOMAIN}
      - traefik.port=80
    image: nginx:1-alpine
    volumes:
    - ../production/configuration/nextcloud_nginx/nginx.conf:/etc/nginx/nginx.conf
    - nextcloud_data:/var/www/html/
  portainer:
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify --admin-password-file '/run/secrets/portainer_admin-password'
    deploy:
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:portainer.${STACK_DOMAIN}
      - traefik.port=9000
      mode: replicated
      placement:
        constraints: [node.role == manager]
      replicas: 1
    image: portainer/portainer:1.20.2
    secrets:
    - portainer_admin-password
    volumes:
    - portainer_data:/data
  portainer-agent:
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
    environment:
      AGENT_CLUSTER_ADDR: tasks.portainer-agent
    image: portainer/agent:1.2.1
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /var/lib/docker/volumes:/var/lib/docker/volumes
  postgres:
    environment:
      POSTGRES_ADDITIONAL_DBS: randomwinpicker.de codimd
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: postgres:12-alpine
    secrets:
    - postgres_db
    - postgres_password
    - postgres_user
    volumes:
    - postgres_data:/var/lib/postgresql/data/
    - ../production/configuration/postgres/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/:ro
  postgres_backup:
    environment:
      POSTGRES_DB_FILE: /run/secrets/postgres-backup_db
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: prodrigestivill/postgres-backup-local:11-alpine
    secrets:
    - postgres-backup_db
    - postgres_password
    - postgres_user
    volumes:
    - postgres_data:/var/lib/postgresql/data/
    - ../production/backup/postgres/:/backups/
  randomwinpicker:
    image: dargmuesli/randomwinpicker:5.0.0
    volumes:
    - randomwinpicker_data:/var/www/randomwinpicker/
    - ../production/secrets/randomwinpicker/randomwinpicker.env:/var/www/randomwinpicker/credentials/randomwinpicker.env:ro
  randomwinpicker_nginx:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:randomwinpicker.${STACK_DOMAIN}
      - traefik.port=443
      - traefik.protocol=https
    image: nginx:1-alpine
    volumes:
    - randomwinpicker_data:/var/www/randomwinpicker/:ro
    - ../production/configuration/randomwinpicker_nginx/nginx.conf:/etc/nginx/nginx.conf
    - ./certificates/:/etc/ssl/certificates/
  thelounge:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:thelounge.${STACK_DOMAIN}
      - traefik.port=9000
    image: thelounge/thelounge:3.1.1-alpine
    volumes:
    - thelounge_data:/var/opt/thelounge
  traefik:
    command:
    - --api
    - --defaultentrypoints=http,https
    - --docker
    - --docker.exposedByDefault=false
    - --docker.swarmMode=true
    - --entryPoints=Name:http Address::80 Redirect.EntryPoint:https
    - --entryPoints=Name:https Address::443 TLS:/etc/traefik/acme/jonas-thelemann.crt,/etc/traefik/acme/jonas-thelemann.key
      Compress:true
    - --insecureSkipVerify=true
    deploy:
      labels:
      - traefik.enable=true
      - traefik.frontend.auth.basic=${STACK_AUTH_BASIC}
      - traefik.frontend.rule=Host:traefik.${STACK_DOMAIN}
      - traefik.port=8080
      mode: global
      placement:
        constraints:
        - node.role == manager
    image: traefik:2.0-alpine
    ports:
    - mode: host
      protocol: tcp
      published: 80
      target: 80
    - mode: host
      protocol: tcp
      published: 443
      target: 443
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./certificates/:/etc/traefik/acme/
version: "3.6"
volumes:
  codimd_config: {}
  nextcloud_data: {}
  portainer_data: {}
  postgres_data: {}
  randomwinpicker_data: {}
  thelounge_data: {}
