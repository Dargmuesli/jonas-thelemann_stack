# jonas-thelemann.de
# https://jonas-thelemann.de/
# jonas-thelemann
# https://github.com/dargmuesli/jonas-thelemann/
---
configs:
  creal-postgraphile_rc:
  # The cReal GraphQL API's configuration file.
    file: ../production/configurations/creal-postgraphile/.postgraphilerc.js
  trapparty-postgraphile_rc:
  # The TrapParty GraphQL API's configuration file.
    file: ../production/configurations/trapparty-postgraphile/.postgraphilerc.js
secrets:
  creal_aws-bucket:
  # The DJ website's AWS bucket name.
    file: ./secrets/creal/aws-bucket.secret
  creal_aws-credentials:
  # The DJ website's AWS credentials.
    file: ./secrets/creal/aws-credentials.secret
  creal-postgraphile_connection:
  # The cReal GraphQL API's database URI.
    file: ./secrets/creal-postgraphile/connection.secret
  creal-postgraphile_owner-connection:
  # The cReal GraphQL API's database owner URI.
    file: ./secrets/creal-postgraphile/owner-connection.secret
  creal_sqitch-target:
  # The DJ website's Sqitch target.
    file: ./secrets/creal/sqitch-target.secret
  creal-strapi_admin-jwt-secret:
  # The DJ website's CMS administrator JWT secret.
    file: ./secrets/creal_strapi/admin-jwt-secret.secret
  hedgedoc_db_url:
  # The markdown collaboration tool's database url.
    file: ./secrets/hedgedoc/db_url.secret
  hedgedoc_session-secret:
  # The markdown collaboration tool's session secret.
    file: ./secrets/hedgedoc/session-secret.secret
  jobber_aws-bucket:
  # The job scheduler's AWS bucket name.
    file: ./secrets/jobber/aws-bucket.secret
  jobber_aws-credentials:
  # The job scheduler's AWS credentials.
    file: ./secrets/jobber/aws-credentials.secret
  nextcloud_admin-password:
  # The cloud admin user's password.
    file: ./secrets/nextcloud/admin-password.secret
  nextcloud_admin-user:
  # The cloud admin user's name.
    file: ./secrets/nextcloud/admin-user.secret
  portainer_admin-password:
  # The container manager's password for the user `admin`.
    file: ./secrets/portainer/admin-password.secret
  postgres-backup_db:
  # The database backup service's database name.
    file: ./secrets/postgres-backup/db.secret
  postgres_db:
  # The database's name.
    file: ./secrets/postgres/db.secret
  postgres_password:
  # The database default user's password.
    file: ./secrets/postgres/password.secret
  postgres_role_creal-postgraphile_password:
  # The `creal_postgraphile` database role's password.
    file: ./secrets/postgres/role_creal-postgraphile_password.secret
  postgres_role_trapparty-postgraphile_password:
  # The `trapparty-postgraphile` database role's password.
    file: ./secrets/postgres/role_trapparty-postgraphile_password.secret
  postgres_user:
  # The database default user's name.
    file: ./secrets/postgres/user.secret
  trapparty-postgraphile_connection:
  # The TrapParty GraphQL API's database URI.
    file: ./secrets/trapparty-postgraphile/connection.secret
  trapparty-postgraphile_owner-connection:
  # The TrapParty GraphQL API's database owner URI.
    file: ./secrets/trapparty-postgraphile/owner-connection.secret
  trapparty_sqitch-target:
  # The party website's Sqitch target.
    file: ./secrets/trapparty/sqitch-target.secret
services:
  1generator:
  # You can access this subproject at [1generator.jonas-thelemann.test](https://1generator.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.1generator.middlewares=redirectscheme
      - traefik.http.routers.1generator.rule=Host(`1generator.${STACK_DOMAIN}`)
      - traefik.http.routers.1generator_secure.rule=Host(`1generator.${STACK_DOMAIN}`)
      - traefik.http.routers.1generator_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.1generator.loadbalancer.server.port=80
    image: dargmuesli/1generator:1.0.1@sha256:6f8dc24e6fc0a254ebe65b0d49f61fdf0749836b91ce1fd3314bbf92ced2b07c
  adminer:
  # You can access the database's frontend at [adminer.jonas-thelemann.test](https://adminer.jonas-thelemann.test/).
  # This information is required for login:
  #
  # |          |                     |
  # | -------- | ------------------- |
  # | System   | PostgreSQL          |
  # | Server   | postgres            |
  # | Username | [postgres_user]     |
  # | Password | [postgres_password] |
  # | Database | [postgres_db]       |
  #
  # Values in square brackets are [Docker secrets](https://docs.docker.com/engine/swarm/secrets/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.adminer.middlewares=redirectscheme
      - traefik.http.routers.adminer.rule=Host(`adminer.${STACK_DOMAIN}`)
      - traefik.http.routers.adminer_secure.rule=Host(`adminer.${STACK_DOMAIN}`)
      - traefik.http.routers.adminer_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.adminer.loadbalancer.server.port=8080
    image: adminer:4.8.1-standalone@sha256:d35b868a0a00fdb51af417bc08af042ef771c2d1e92598f1844103faa8a93235
    volumes:
    - ../production/configurations/adminer/adminer.css:/var/www/html/adminer.css:ro
  creal:
  # You can access the DJ website at [creal.jonas-thelemann.test](https://creal.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.creal.middlewares=redirectscheme
      - traefik.http.routers.creal.rule=Host(`creal.${STACK_DOMAIN}`)
      - traefik.http.routers.creal_secure.rule=Host(`creal.${STACK_DOMAIN}`)
      - traefik.http.routers.creal_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.creal.loadbalancer.server.port=3000
    environment:
      AWS_SHARED_CREDENTIALS_FILE: /run/secrets/creal_aws-credentials
      NUXT_ENV_STACK_DOMAIN: ${STACK_DOMAIN} # Must be prefixed by "NUXT_ENV_" (https://nuxtjs.org/api/configuration-env/#automatic-injection-of-environment-variables)
    image: dargmuesli/creal:dev
    secrets:
    - creal_aws-bucket
    - creal_aws-credentials
    - creal_sqitch-target
    - postgres_role_creal-postgraphile_password
    user: node:node
    volumes:
    - ../../../creal/nuxt/:/srv/app/
    - ../../../creal/sqitch/:/srv/sqitch/
  creal-postgraphile:
  # You can access cReal's GraphQL API for the PostgreSQL database at [creal-postgraphile.jonas-thelemann.test](https://creal-postgraphile.jonas-thelemann.test/).
    configs:
      - source: creal-postgraphile_rc
        target: /postgraphile/.postgraphilerc.js
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.creal-postgraphile.middlewares=redirectscheme
      - traefik.http.routers.creal-postgraphile.rule=Host(`creal-postgraphile.${STACK_DOMAIN}`)
      - traefik.http.routers.creal-postgraphile_secure.middlewares=header_cors
      - traefik.http.routers.creal-postgraphile_secure.rule=Host(`creal-postgraphile.${STACK_DOMAIN}`)
      - traefik.http.routers.creal-postgraphile_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.creal-postgraphile.loadbalancer.server.port=5000
    image: graphile/postgraphile:4.12.11@sha256:038ae2c2d0b907ea01e7db499c3acb7c2c9339d55fc357bc380f21b7cba27c6e
    secrets:
    - creal-postgraphile_connection
    - creal-postgraphile_owner-connection
  creal_strapi:
  # You can access the DJ website's CMS at [strapi.jonas-thelemann.test](https://strapi.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.creal_strapi.middlewares=redirectscheme
      - traefik.http.routers.creal_strapi.rule=Host(`strapi.${STACK_DOMAIN}`)
      - traefik.http.routers.creal_strapi_secure.rule=Host(`strapi.${STACK_DOMAIN}`)
      - traefik.http.routers.creal_strapi_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.creal_strapi.loadbalancer.server.port=1337
    environment:
      ADMIN_JWT_SECRET_FILE: /run/secrets/creal-strapi_admin-jwt-secret
      DATABASE_NAME: creal_strapi
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
    image: dargmuesli/creal_strapi:dev
    secrets:
    - creal-strapi_admin-jwt-secret
    - postgres_password
    - postgres_user
    volumes:
    - ../../../creal_strapi/:/opt/app/
  hedgedoc:
  # You can access the markdown collaboration tool at [hedgedoc.jonas-thelemann.test](https://hedgedoc.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.hedgedoc.middlewares=redirectscheme
      - traefik.http.routers.hedgedoc.rule=Host(`hedgedoc.${STACK_DOMAIN}`)
      - traefik.http.routers.hedgedoc_secure.rule=Host(`hedgedoc.${STACK_DOMAIN}`)
      - traefik.http.routers.hedgedoc_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.hedgedoc.loadbalancer.server.port=3000
    environment:
      CMD_DOMAIN: hedgedoc.${STACK_DOMAIN}
      CMD_PROTOCOL_USESSL: "true"
      CMD_URL_ADDPORT: "false"
    image: quay.io/hedgedoc/hedgedoc:1.9.6-alpine@sha256:45c96fcbab58f169adadad08a90c98d673f1462a4553c3a450e1bd41c3b1b560
    secrets:
    - source: hedgedoc_db_url
      target: dbURL
    - source: hedgedoc_session-secret
      target: sessionsecret
  jobber:
  # You cannot access the jobber via a web interface.
    environment:
      AWS_SHARED_CREDENTIALS_FILE: /run/secrets/jobber_aws-credentials
    image: dargmuesli/jobber-aws-msmtp:1.2.5@sha256:71019d2f58a0ecc5d8b5f78865c00acf23b3243bf8fc7792fcb7f18e5a42744e
    secrets:
    - jobber_aws-bucket
    - jobber_aws-credentials
    volumes:
      - ../production/backups/postgres/:/backups/
      - ../production/configurations/jobber/.jobber:/home/jobberuser/.jobber:ro
      - ../production/configurations/jobber/aws-config:/home/jobberuser/.aws/config:ro
      - ../production/secrets/jobber/aliases:/etc/aliases:ro
      - ../production/secrets/jobber/msmtprc:/etc/msmtprc:ro
  jonas-thelemann:
  # You can access the main project at [jonas-thelemann.test](https://jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.jonas-thelemann.middlewares=redirectscheme
      - traefik.http.routers.jonas-thelemann.rule=Host(`${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`)
      - traefik.http.routers.jonas-thelemann_secure.rule=Host(`${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`)
      - traefik.http.routers.jonas-thelemann_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.jonas-thelemann.loadbalancer.server.port=3000 #DARGSTACK-REMOVE
    image: dargmuesli/jonas-thelemann:dev
    user: node:node
    volumes:
    - ${PNPM_STORE_DIR}:/srv/.pnpm-store/
    - ../../../jonas-thelemann:/srv/app/
  nextcloud:
  # You can access nextcloud via `nextcloud_nginx`.
    env_file: ../production/secrets/nextcloud/nextcloud.env
    image: nextcloud:25.0.1-fpm-alpine@sha256:6bab18314fe3308a15c1aa72735ef570eabb52281773c805085c153df356a8e3
    secrets:
    - nextcloud_admin-password
    - nextcloud_admin-user
    - postgres_password
    - postgres_user
    volumes:
    - nextcloud_data:/var/www/html/
  nextcloud_nginx:
  # You can access nexcloud's frontend at [nextcloud.jonas-thelemann.test](https://nextcloud.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex.redirectregex.permanent=true
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex.redirectregex.regex=https://(.*)/.well-known/(card|cal)dav
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex.redirectregex.replacement=https://$${1}/remote.php/dav/
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex_calendar.redirectregex.regex=.*
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex_calendar.redirectregex.replacement=https://nextcloud.${STACK_DOMAIN}/apps/calendar/
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex_contacts.redirectregex.regex=.*
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex_contacts.redirectregex.replacement=https://nextcloud.${STACK_DOMAIN}/apps/contacts/
      - traefik.http.routers.nextcloud_nginx.middlewares=redirectscheme
      - traefik.http.routers.nextcloud_nginx.rule=Host(`nextcloud.${STACK_DOMAIN}`)
      - traefik.http.routers.nextcloud_nginx_secure.middlewares=nextcloud_nginx_secure_redirectregex@docker
      - traefik.http.routers.nextcloud_nginx_secure.rule=Host(`nextcloud.${STACK_DOMAIN}`)
      - traefik.http.routers.nextcloud_nginx_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.routers.nextcloud_nginx_secure_calendar.middlewares=nextcloud_nginx_secure_redirectregex_calendar@docker
      - traefik.http.routers.nextcloud_nginx_secure_calendar.rule=Host(`calendar.${STACK_DOMAIN}`)
      - traefik.http.routers.nextcloud_nginx_secure_calendar.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.routers.nextcloud_nginx_secure_contacts.middlewares=nextcloud_nginx_secure_redirectregex_contacts@docker
      - traefik.http.routers.nextcloud_nginx_secure_contacts.rule=Host(`contacts.${STACK_DOMAIN}`)
      - traefik.http.routers.nextcloud_nginx_secure_contacts.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.nextcloud.loadbalancer.server.port=80
    image: nginx:1.23.2-alpine@sha256:455c39afebd4d98ef26dd70284aa86e6810b0485af5f4f222b19b89758cabf1e
    volumes:
    - ../production/configurations/nextcloud_nginx/nginx.conf:/etc/nginx/nginx.conf
    - nextcloud_data:/var/www/html/
  portainer:
  # You can access the container manager's frontend at [portainer.jonas-thelemann.test](https://portainer.jonas-thelemann.test/).
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify --admin-password-file '/run/secrets/portainer_admin-password'
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.middlewares=redirectscheme
      - traefik.http.routers.portainer.rule=Host(`portainer.${STACK_DOMAIN}`)
      - traefik.http.routers.portainer_secure.rule=Host(`portainer.${STACK_DOMAIN}`)
      - traefik.http.routers.portainer_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.portainer.loadbalancer.server.port=9000
      mode: replicated
      placement:
        constraints:
        - node.role == manager
      replicas: 1
    image: portainer/portainer-ce:2.16.1-alpine@sha256:e4d42cd14d24f77efbd6abb5fa90bb24b84c71994be0e8f5d4eeccfa99657816
    secrets:
    - portainer_admin-password
    volumes:
    - portainer_data:/data
  portainer-agent:
  # You can access the container manager agent via `portainer`.
    deploy:
      mode: global
      placement:
        constraints:
        - node.platform.os == linux
    environment:
      AGENT_CLUSTER_ADDR: tasks.portainer-agent
    image: portainer/agent:2.16.1@sha256:4b452fe04deaa381c8e3f14138748959338c06902c2f95350d83bd3248818ad1
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /var/lib/docker/volumes:/var/lib/docker/volumes
  postgres:
  # You can access the database via `adminer`.
    environment:
      POSTGRES_ADDITIONAL_DBS: creal creal_strapi hedgedoc nextcloud randomwinpicker trapparty
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: postgres:15.1-alpine@sha256:cc663286e63810373bdfc91a5ed24b772447fb5282d44cfe19f820b6b81197f2
    secrets:
    - postgres_db
    - postgres_password
    - postgres_user
    volumes:
    - /mnt/dev/postgresql/:/var/run/postgresql/ #DARGSTACK-REMOVE
    - postgres_data:/var/lib/postgresql/data/
    - ../production/configurations/postgres/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/:ro
  thelounge:
  # You can access the web IRC client's dashboard at [thelounge.jonas-thelemann.test](https://traefik.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.thelounge.middlewares=redirectscheme
      - traefik.http.routers.thelounge.rule=Host(`thelounge.${STACK_DOMAIN}`)
      - traefik.http.routers.thelounge_secure.rule=Host(`thelounge.${STACK_DOMAIN}`)
      - traefik.http.routers.thelounge_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.thelounge.loadbalancer.server.port=9000
    image: thelounge/thelounge:4.3.0-alpine@sha256:0037aa258261831ee9fef080a3ab6ff42b6a43c64081e9465634698c452572f4
    volumes:
    - thelounge_data:/var/opt/thelounge
  traefik:
  # You can access the reverse proxy's dashboard at [traefik.jonas-thelemann.test](https://traefik.jonas-thelemann.test/).
  # Traefik enables HTTPS for all services and acts as a load-balancer too.
    command:
    - --api=true
    - --entryPoints.web.address=:80
    - --entryPoints.web-secure.address=:443
    - --providers.docker=true
    - --providers.docker.endpoint=unix:///var/run/docker.sock
    - --providers.docker.exposedByDefault=false
    - --providers.docker.swarmMode=true
    - --providers.file.filename=/dynamic.yml #DARGSTACK-REMOVE
    - --providers.file.watch=true #DARGSTACK-REMOVE
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.middlewares.header_cors.headers.accessControlAllowHeaders=authorization,content-type
      - traefik.http.middlewares.header_cors.headers.accessControlAllowOriginList=*
      - traefik.http.middlewares.redirectscheme.redirectscheme.scheme=https
      - traefik.http.routers.traefik.middlewares=redirectscheme
      - traefik.http.routers.traefik.rule=Host(`traefik.${STACK_DOMAIN}`)
      - traefik.http.routers.traefik_secure.rule=Host(`traefik.${STACK_DOMAIN}`)
      - traefik.http.routers.traefik_secure.service=api@internal
      - traefik.http.routers.traefik_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      mode: global
      placement:
        constraints:
        - node.role == manager
    image: traefik:v2.9.4@sha256:2e53e47b59bc9a799b6c7b0d6d65f529de478094781751f1e061516ce9ca7c68
    ports:
    - mode: host
      protocol: tcp
      published: 80
      target: 80
    - mode: host
      protocol: tcp
      published: 443
      target: 443
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./certificates/:/etc/traefik/acme/
    - ./configurations/traefik/dynamic.yml:/dynamic.yml:ro #DARGSTACK-REMOVE
  trapparty:
  # You can access TrapParty's website at [trapparty.jonas-thelemann.test](https://trapparty.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.trapparty.middlewares=redirectscheme
      - traefik.http.routers.trapparty.rule=Host(`trapparty.${STACK_DOMAIN}`)
      - traefik.http.routers.trapparty_secure.rule=Host(`trapparty.${STACK_DOMAIN}`)
      - traefik.http.routers.trapparty_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.trapparty.loadbalancer.server.port=3000
    environment:
      NUXT_ENV_STACK_DOMAIN: ${STACK_DOMAIN} # Must be prefixed by "NUXT_ENV_" (https://nuxtjs.org/api/configuration-env/#automatic-injection-of-environment-variables)
    image: dargmuesli/trapparty:dev
    secrets:
    - trapparty_sqitch-target
    - postgres_db
    - postgres_role_trapparty-postgraphile_password
    user: node:node
    volumes:
    - ../../../trapparty/nuxt/:/srv/app/
    - ../../../trapparty/sqitch/:/srv/sqitch/
  trapparty-postgraphile:
  # You can access TrapParty's GraphQL API for the PostgreSQL database at [postgraphile.jonas-thelemann.test](https://postgraphile.jonas-thelemann.test/).
    configs:
      - source: trapparty-postgraphile_rc
        target: /postgraphile/.postgraphilerc.js
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.trapparty-postgraphile.middlewares=redirectscheme
      - traefik.http.routers.trapparty-postgraphile.rule=Host(`trapparty-postgraphile.${STACK_DOMAIN}`)
      - traefik.http.routers.trapparty-postgraphile_secure.middlewares=header_cors
      - traefik.http.routers.trapparty-postgraphile_secure.rule=Host(`trapparty-postgraphile.${STACK_DOMAIN}`)
      - traefik.http.routers.trapparty-postgraphile_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.trapparty-postgraphile.loadbalancer.server.port=5000
    image: graphile/postgraphile:4.12.11@sha256:038ae2c2d0b907ea01e7db499c3acb7c2c9339d55fc357bc380f21b7cba27c6e
    secrets:
    - trapparty-postgraphile_connection
    - trapparty-postgraphile_owner-connection
version: "3.6"
volumes:
  nextcloud_data:
  # The cloud's data.
    {}
  portainer_data:
  # The container manager's data.
    {}
  postgres_data:
  # The database's data.
    {}
  thelounge_data:
  # The IRC client's data.
    {}
