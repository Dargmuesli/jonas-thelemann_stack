# jonas-thelemann.de
# https://jonas-thelemann.de/
# jonas-thelemann
# https://github.com/dargmuesli/jonas-thelemann/
---
configs:
  trapparty-postgraphile_rc:
  # The TrapParty GraphQL API's configuration file.
    file: ../production/configuration/trapparty-postgraphile/.postgraphilerc.js
secrets:
  codimd_db_url:
  # The markdown collaboration tool's database url.
    file: ./secrets/codimd/db_url.secret
  codimd_session-secret:
  # The markdown collaboration tool's session secret.
    file: ./secrets/codimd/session-secret.secret
  creal_aws-bucket:
  # The DJ website's AWS bucket name.
    file: ./secrets/creal/aws-bucket.secret
  creal_aws-credentials:
  # The DJ website's AWS credentials.
    file: ./secrets/creal/aws-credentials.secret
  creal_sqitch-target:
  # The DJ website's Sqitch target.
    file: ./secrets/creal/sqitch-target.secret
  creal-strapi_admin-jwt-secret:
  # The DJ website's CMS administrator JWT secret.
    file: ./secrets/creal_strapi/admin-jwt-secret.secret
  nextcloud_admin-password:
  # The cloud admin user's password.
    file: ./secrets/nextcloud/admin-password.secret
  nextcloud_admin-user:
  # The cloud admin user's name.
    file: ./secrets/nextcloud/admin-user.secret
  portainer_admin-password:
  # The container manager's password for the user `admin`.
    file: ./secrets/portainer/admin-password.secret
  postgres-backup_db:
  # The database backup service's database name.
    file: ./secrets/postgres-backup/db.secret
  postgres_db:
  # The database's name.
    file: ./secrets/postgres/db.secret
  postgres_password:
  # The database default user's password.
    file: ./secrets/postgres/password.secret
  postgres_role_creal-postgraphile_password:
  # The `creal_postgraphile` database role's password.
    file: ./secrets/postgres/role_creal-postgraphile_password.secret
  postgres_role_trapparty-postgraphile_password:
  # The `trapparty-postgraphile` database role's password.
    file: ./secrets/postgres/role_trapparty-postgraphile_password.secret
  postgres_user:
  # The database default user's name.
    file: ./secrets/postgres/user.secret
  trapparty-postgraphile_connection:
  # The TrapParty GraphQL API's database URI.
    file: ./secrets/trapparty-postgraphile/connection.secret
  trapparty-postgraphile_owner-connection:
  # The TrapParty GraphQL API's database owner URI.
    file: ./secrets/trapparty-postgraphile/owner-connection.secret
  trapparty_sqitch-target:
  # The party website's Sqitch target.
    file: ./secrets/trapparty/sqitch-target.secret
services:
  1generator:
  # You can access this subproject at [1generator.jonas-thelemann.test](https://1generator.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.1generator.middlewares=redirectscheme
      - traefik.http.routers.1generator.rule=Host(`1generator.${STACK_DOMAIN}`)
      - traefik.http.routers.1generator_secure.rule=Host(`1generator.${STACK_DOMAIN}`)
      - traefik.http.routers.1generator_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.1generator.loadbalancer.server.port=80
    image: dargmuesli/1generator:1.0.1@sha256:6f8dc24e6fc0a254ebe65b0d49f61fdf0749836b91ce1fd3314bbf92ced2b07c
  adminer:
  # You can access the database's frontend at [adminer.jonas-thelemann.test](https://adminer.jonas-thelemann.test/).
  # This information is required for login:
  #
  # |          |                     |
  # | -------- | ------------------- |
  # | System   | PostgreSQL          |
  # | Server   | postgres            |
  # | Username | [postgres_user]     |
  # | Password | [postgres_password] |
  # | Database | [postgres_db]       |
  #
  # Values in square brackets are [Docker secrets](https://docs.docker.com/engine/swarm/secrets/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.adminer.middlewares=redirectscheme
      - traefik.http.routers.adminer.rule=Host(`adminer.${STACK_DOMAIN}`)
      - traefik.http.routers.adminer_secure.rule=Host(`adminer.${STACK_DOMAIN}`)
      - traefik.http.routers.adminer_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.adminer.loadbalancer.server.port=8080
    image: adminer:4.8.0-standalone@sha256:694f8a36d3caf047ceaab3d2276dc0cdd32fca1633f8f5d15d2b2be74b3febd0
    volumes:
    - ../production/configuration/adminer/adminer.css:/var/www/html/adminer.css:ro
  codimd:
  # You can access the markdown collaboration tool at [codimd.jonas-thelemann.test](https://codimd.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.codimd.middlewares=redirectscheme
      - traefik.http.routers.codimd.rule=Host(`codimd.${STACK_DOMAIN}`)
      - traefik.http.routers.codimd_secure.rule=Host(`codimd.${STACK_DOMAIN}`)
      - traefik.http.routers.codimd_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.codimd.loadbalancer.server.port=3000
    environment:
      CMD_DOMAIN: codimd.${STACK_DOMAIN}
      CMD_PROTOCOL_USESSL: "true"
      CMD_URL_ADDPORT: "false"
    image: quay.io/codimd/server:1.6.0-alpine@sha256:4957009ea9bcb32c94865530e439c4adfe1a6fdc56a09b9b0743af69224f165b
    secrets:
    - source: codimd_db_url
      target: dbURL
    - source: codimd_session-secret
      target: sessionsecret
  creal:
  # You can access the DJ website at [creal.jonas-thelemann.test](https://creal.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.creal.middlewares=redirectscheme
      - traefik.http.routers.creal.rule=Host(`creal.${STACK_DOMAIN}`)
      - traefik.http.routers.creal_secure.rule=Host(`creal.${STACK_DOMAIN}`)
      - traefik.http.routers.creal_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.creal.loadbalancer.server.port=3000
    environment:
      AWS_SHARED_CREDENTIALS_FILE: /run/secrets/creal_aws-credentials
      NUXT_ENV_STACK_DOMAIN: ${STACK_DOMAIN} # Must be prefixed by "NUXT_ENV_" (https://nuxtjs.org/api/configuration-env/#automatic-injection-of-environment-variables)
    image: dargmuesli/creal:dev
    secrets:
    - creal_aws-bucket
    - creal_aws-credentials
    - creal_sqitch-target
    - postgres_role_creal-postgraphile_password
    user: node:node
    volumes:
    - ../../../creal/nuxt/:/srv/app/
    - ../../../creal/sqitch/:/srv/sqitch/
  creal_strapi:
  # You can access the DJ website's CMS at [strapi.jonas-thelemann.test](https://strapi.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.creal_strapi.middlewares=redirectscheme
      - traefik.http.routers.creal_strapi.rule=Host(`strapi.${STACK_DOMAIN}`)
      - traefik.http.routers.creal_strapi_secure.rule=Host(`strapi.${STACK_DOMAIN}`)
      - traefik.http.routers.creal_strapi_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.creal_strapi.loadbalancer.server.port=1337
    environment:
      ADMIN_JWT_SECRET_FILE: /run/secrets/creal-strapi_admin-jwt-secret
      DATABASE_CLIENT: postgres
      DATABASE_NAME: creal_strapi
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
    image: strapi/strapi:3.5.4@sha256:3a37ee6b29e77c5f6638282a6850bbd4ceb6d90e8b1ada55023cd563888893a0
    secrets:
    - creal-strapi_admin-jwt-secret
    - postgres_password
    - postgres_user
    volumes:
    - ../../../creal_strapi/:/srv/app/
  jonas-thelemann:
  # You can access the main project via `jonas-thelemann_nginx`.
    image: dargmuesli/jonas-thelemann:dev
    user: 1000:82
    volumes:
    - ../../../jonas-thelemann/dist/jonas-thelemann/server/:/var/www/jonas-thelemann/server/
    - ../production/secrets/jonas-thelemann/jonas-thelemann.env:/var/www/jonas-thelemann/credentials/jonas-thelemann.env:ro
  jonas-thelemann_nginx:
  # You can access the main project at [jonas-thelemann.test](https://jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.jonas-thelemann_nginx.middlewares=redirectscheme
      - traefik.http.routers.jonas-thelemann_nginx.rule=Host(`${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`)
      - traefik.http.routers.jonas-thelemann_nginx_secure.rule=Host(`${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`)
      - traefik.http.routers.jonas-thelemann_nginx_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.routers.jonas-thelemann_nginx_secure_tools.rule=Host(`${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`) && PathPrefix(`/tools/`)
      - traefik.http.routers.jonas-thelemann_nginx_secure_tools.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.jonas-thelemann_nginx.loadbalancer.server.port=80
    image: nginx:1.19.9-alpine@sha256:d33e9e24389d7d8b90fe2bcc2dd1bc09b4d235e916ba9d5d9a71cf52e340edb6
    volumes:
    - ../production/configuration/jonas-thelemann_nginx/nginx.conf:/etc/nginx/nginx.conf
    - ../../../jonas-thelemann/dist/jonas-thelemann/server/:/var/www/jonas-thelemann/server/:ro
    - ./certificates/:/etc/ssl/certificates/
  nextcloud:
  # You can access nextcloud via `nextcloud_nginx`.
    env_file: ../production/secrets/nextcloud/nextcloud.env
    image: nextcloud:20.0.8-fpm-alpine@sha256:8b78663e9e9fd9bd509dd30fcbb5a0afc57221701d974ab652a4f1a2cf1bcb5c
    secrets:
    - nextcloud_admin-password
    - nextcloud_admin-user
    - postgres_password
    - postgres_user
    volumes:
    - nextcloud_data:/var/www/html/
  nextcloud_nginx:
  # You can access nexcloud's frontend at [nextcloud.jonas-thelemann.test](https://nextcloud.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex_calendar.redirectregex.regex=.*
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex_calendar.redirectregex.replacement=https://nextcloud.${STACK_DOMAIN}/apps/calendar/
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex_contacts.redirectregex.regex=.*
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex_contacts.redirectregex.replacement=https://nextcloud.${STACK_DOMAIN}/apps/contacts/
      - traefik.http.routers.nextcloud_nginx.middlewares=redirectscheme
      - traefik.http.routers.nextcloud_nginx.rule=Host(`nextcloud.${STACK_DOMAIN}`)
      - traefik.http.routers.nextcloud_nginx_secure.rule=Host(`nextcloud.${STACK_DOMAIN}`)
      - traefik.http.routers.nextcloud_nginx_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.routers.nextcloud_nginx_secure_calendar.middlewares=nextcloud_nginx_secure_redirectregex_calendar@docker
      - traefik.http.routers.nextcloud_nginx_secure_calendar.rule=Host(`calendar.${STACK_DOMAIN}`)
      - traefik.http.routers.nextcloud_nginx_secure_calendar.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.routers.nextcloud_nginx_secure_contacts.middlewares=nextcloud_nginx_secure_redirectregex_contacts@docker
      - traefik.http.routers.nextcloud_nginx_secure_contacts.rule=Host(`contacts.${STACK_DOMAIN}`)
      - traefik.http.routers.nextcloud_nginx_secure_contacts.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.nextcloud.loadbalancer.server.port=80
    image: nginx:1.19.9-alpine@sha256:d33e9e24389d7d8b90fe2bcc2dd1bc09b4d235e916ba9d5d9a71cf52e340edb6
    volumes:
    - ../production/configuration/nextcloud_nginx/nginx.conf:/etc/nginx/nginx.conf
    - nextcloud_data:/var/www/html/
  portainer:
  # You can access the container manager's frontend at [portainer.jonas-thelemann.test](https://portainer.jonas-thelemann.test/).
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify --admin-password-file '/run/secrets/portainer_admin-password'
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.middlewares=redirectscheme
      - traefik.http.routers.portainer.rule=Host(`portainer.${STACK_DOMAIN}`)
      - traefik.http.routers.portainer_secure.rule=Host(`portainer.${STACK_DOMAIN}`)
      - traefik.http.routers.portainer_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.portainer.loadbalancer.server.port=9000
      mode: replicated
      placement:
        constraints:
        - node.role == manager
      replicas: 1
    image: portainer/portainer:1.24.2@sha256:fb45b43738646048a0a0cc74fcee2865b69efde857e710126084ee5de9be0f3f
    secrets:
    - portainer_admin-password
    volumes:
    - portainer_data:/data
  portainer-agent:
  # You can access the container manager agent via `portainer`.
    deploy:
      mode: global
      placement:
        constraints:
        - node.platform.os == linux
    environment:
      AGENT_CLUSTER_ADDR: tasks.portainer-agent
    image: portainer/agent:1.6.1@sha256:d74498147e8f421bb4af0db74b0f6bc81eb398de580a9fb1e7bc75bfc537462a
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /var/lib/docker/volumes:/var/lib/docker/volumes
  postgres:
  # You can access the database via `adminer`.
    environment:
      POSTGRES_ADDITIONAL_DBS: codimd creal creal_strapi nextcloud randomwinpicker trapparty
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: postgres:13.2-alpine@sha256:74e5cfe888fc525ec234d4b61867318eb5c4a536166a55a3374877cf32466479
    secrets:
    - postgres_db
    - postgres_password
    - postgres_user
    volumes:
    - /mnt/dev/postgresql/:/var/run/postgresql/ #DARGSTACK-REMOVE
    - postgres_data:/var/lib/postgresql/data/
    - ../production/configuration/postgres/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/:ro
  randomwinpicker:
  # You can access the main project via `randomwinpicker_nginx`.
    image: dargmuesli/randomwinpicker:5.2.0@sha256:42759f3d0d31c3db3090e08c205558f83db008952e542aed0d8ad9c8cc05aaf3
    volumes:
    - randomwinpicker_data:/var/www/randomwinpicker/server/
    - ../production/secrets/randomwinpicker/randomwinpicker.env:/var/www/randomwinpicker/credentials/randomwinpicker.env:ro
  randomwinpicker_nginx:
  # You can access the main project at [randomwinpicker.jonas-thelemann.test](https://randomwinpicker.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.randomwinpicker_nginx.middlewares=redirectscheme
      - traefik.http.routers.randomwinpicker_nginx.rule=Host(`randomwinpicker.${STACK_DOMAIN}`)
      - traefik.http.routers.randomwinpicker_nginx_secure.rule=Host(`randomwinpicker.${STACK_DOMAIN}`)
      - traefik.http.routers.randomwinpicker_nginx_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.randomwinpicker_nginx.loadbalancer.server.port=80
    image: nginx:1.19.9-alpine@sha256:d33e9e24389d7d8b90fe2bcc2dd1bc09b4d235e916ba9d5d9a71cf52e340edb6
    volumes:
    - randomwinpicker_data:/var/www/randomwinpicker/server/:ro
    - ../production/configuration/randomwinpicker_nginx/nginx.conf:/etc/nginx/nginx.conf
    - ./certificates/:/etc/ssl/certificates/
  thelounge:
  # You can access the web IRC client's dashboard at [thelounge.jonas-thelemann.test](https://traefik.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.thelounge.middlewares=redirectscheme
      - traefik.http.routers.thelounge.rule=Host(`thelounge.${STACK_DOMAIN}`)
      - traefik.http.routers.thelounge_secure.rule=Host(`thelounge.${STACK_DOMAIN}`)
      - traefik.http.routers.thelounge_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.thelounge.loadbalancer.server.port=9000
    image: thelounge/thelounge:4.2.0-alpine@sha256:639978459c3a8cead559a5418db75d49cd66ca4856a6dcd05bb14a7cb4294453
    volumes:
    - thelounge_data:/var/opt/thelounge
  traefik:
  # You can access the reverse proxy's dashboard at [traefik.jonas-thelemann.test](https://traefik.jonas-thelemann.test/).
  # Traefik enables HTTPS for all services and acts as a load-balancer too.
    command:
    - --api=true
    - --entryPoints.web.address=:80
    - --entryPoints.web-secure.address=:443
    - --pilot.token=${TRAEFIK_PILOT_TOKEN}
    - --providers.docker=true
    - --providers.docker.endpoint=unix:///var/run/docker.sock
    - --providers.docker.exposedByDefault=false
    - --providers.docker.swarmMode=true
    - --providers.file.filename=/dynamic.yml #DARGSTACK-REMOVE
    - --providers.file.watch=true #DARGSTACK-REMOVE
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.middlewares.header_cors.headers.accessControlAllowHeaders=authorization,content-type
      - traefik.http.middlewares.header_cors.headers.accessControlAllowOrigin=*
      - traefik.http.middlewares.redirectscheme.redirectscheme.scheme=https
      - traefik.http.routers.traefik.middlewares=redirectscheme
      - traefik.http.routers.traefik.rule=Host(`traefik.${STACK_DOMAIN}`)
      - traefik.http.routers.traefik_secure.rule=Host(`traefik.${STACK_DOMAIN}`)
      - traefik.http.routers.traefik_secure.service=api@internal
      - traefik.http.routers.traefik_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      mode: global
      placement:
        constraints:
        - node.role == manager
    image: traefik:v2.4.8@sha256:b8ecb68bfbd01d399549da5a16ea8abe93154cf021bd31d2b28b4bcdc791583c
    ports:
    - mode: host
      protocol: tcp
      published: 80
      target: 80
    - mode: host
      protocol: tcp
      published: 443
      target: 443
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./certificates/:/etc/traefik/acme/
    - ./configurations/traefik/dynamic.yml:/dynamic.yml:ro #DARGSTACK-REMOVE
  trapparty:
  # You can access TrapParty's website at [trapparty.jonas-thelemann.test](https://trapparty.jonas-thelemann.test/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.trapparty.middlewares=redirectscheme
      - traefik.http.routers.trapparty.rule=Host(`trapparty.${STACK_DOMAIN}`)
      - traefik.http.routers.trapparty_secure.rule=Host(`trapparty.${STACK_DOMAIN}`)
      - traefik.http.routers.trapparty_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.trapparty.loadbalancer.server.port=3000
    environment:
      NUXT_ENV_STACK_DOMAIN: ${STACK_DOMAIN} # Must be prefixed by "NUXT_ENV_" (https://nuxtjs.org/api/configuration-env/#automatic-injection-of-environment-variables)
    image: dargmuesli/trapparty:dev
    secrets:
    - trapparty_sqitch-target
    - postgres_db
    - postgres_role_trapparty-postgraphile_password
    user: node:node
    volumes:
    - ../../../trapparty/nuxt/:/srv/app/
    - ../../../trapparty/sqitch/:/srv/sqitch/
  trapparty-postgraphile:
  # You can access TrapParty's GraphQL API for the PostgreSQL database at [postgraphile.jonas-thelemann.test](https://postgraphile.jonas-thelemann.test/).
    configs:
      - source: trapparty-postgraphile_rc
        target: /postgraphile/.postgraphilerc.js
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.trapparty-postgraphile.middlewares=redirectscheme
      - traefik.http.routers.trapparty-postgraphile.rule=Host(`trapparty-postgraphile.${STACK_DOMAIN}`)
      - traefik.http.routers.trapparty-postgraphile_secure.middlewares=header_cors
      - traefik.http.routers.trapparty-postgraphile_secure.rule=Host(`trapparty-postgraphile.${STACK_DOMAIN}`)
      - traefik.http.routers.trapparty-postgraphile_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.trapparty-postgraphile.loadbalancer.server.port=5000
    image: graphile/postgraphile:v4.11.0@sha256:1a41e298fe71c13cdbeb603c6340c3deeef1a143ef3acb63646671c28b53457c
    secrets:
    - trapparty-postgraphile_connection
    - trapparty-postgraphile_owner-connection
version: "3.6"
volumes:
  nextcloud_data:
  # The cloud's data.
    {}
  portainer_data:
  # The container manager's data.
    {}
  postgres_data:
  # The database's data.
    {}
  randomwinpicker_data:
  # Randomwinpicker's data.
    {}
  thelounge_data:
  # The IRC client's data.
    {}
